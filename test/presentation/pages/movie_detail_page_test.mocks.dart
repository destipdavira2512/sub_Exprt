// Mocks generated by Mockito 5.1.0 from annotations
// in cinta_film/test/presentation/pages/movie_detail_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i11;
import 'dart:ui' as _i12;

import 'package:cinta_film/common/state_enum.dart' as _i9;
import 'package:cinta_film/domain/entities/film.dart' as _i10;
import 'package:cinta_film/domain/entities/movie_detail.dart' as _i7;
import 'package:cinta_film/domain/usecases/ambil_data_detail_film.dart' as _i2;
import 'package:cinta_film/domain/usecases/ambil_data_film_rekomendasi.dart'
    as _i3;
import 'package:cinta_film/domain/usecases/ambil_status_daftar_tonton.dart'
    as _i4;
import 'package:cinta_film/domain/usecases/daftar_tonton.dart' as _i5;
import 'package:cinta_film/domain/usecases/hapus_daftar_tonton.dart' as _i6;
import 'package:cinta_film/presentasi/provider/movie_detail_notifier.dart'
    as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetMovieDetail_0 extends _i1.Fake implements _i2.GetMovieDetail {}

class _FakeAmbilDataRekomendasiFilm_1 extends _i1.Fake
    implements _i3.AmbilDataRekomendasiFilm {}

class _FakeClassStatusDaftarTonton_2 extends _i1.Fake
    implements _i4.ClassStatusDaftarTonton {}

class _FakeClassSimpanDaftarTonton_3 extends _i1.Fake
    implements _i5.ClassSimpanDaftarTonton {}

class _FakeClassHapusDaftarTonton_4 extends _i1.Fake
    implements _i6.ClassHapusDaftarTonton {}

class _FakeMovieDetail_5 extends _i1.Fake implements _i7.MovieDetail {}

/// A class which mocks [MovieDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieDetailNotifier extends _i1.Mock
    implements _i8.MovieDetailNotifier {
  MockMovieDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetMovieDetail get getMovieDetail =>
      (super.noSuchMethod(Invocation.getter(#getMovieDetail),
          returnValue: _FakeGetMovieDetail_0()) as _i2.GetMovieDetail);
  @override
  _i3.AmbilDataRekomendasiFilm get getMovieRecommendations =>
      (super.noSuchMethod(Invocation.getter(#getMovieRecommendations),
              returnValue: _FakeAmbilDataRekomendasiFilm_1())
          as _i3.AmbilDataRekomendasiFilm);
  @override
  _i4.ClassStatusDaftarTonton get getwatchlistStatus =>
      (super.noSuchMethod(Invocation.getter(#getwatchlistStatus),
              returnValue: _FakeClassStatusDaftarTonton_2())
          as _i4.ClassStatusDaftarTonton);
  @override
  _i5.ClassSimpanDaftarTonton get savewatchlist =>
      (super.noSuchMethod(Invocation.getter(#savewatchlist),
              returnValue: _FakeClassSimpanDaftarTonton_3())
          as _i5.ClassSimpanDaftarTonton);
  @override
  _i6.ClassHapusDaftarTonton get removewatchlist =>
      (super.noSuchMethod(Invocation.getter(#removewatchlist),
              returnValue: _FakeClassHapusDaftarTonton_4())
          as _i6.ClassHapusDaftarTonton);
  @override
  _i9.RequestState get movieState =>
      (super.noSuchMethod(Invocation.getter(#movieState),
          returnValue: _i9.RequestState.Empty) as _i9.RequestState);
  @override
  _i7.MovieDetail get film => (super.noSuchMethod(Invocation.getter(#film),
      returnValue: _FakeMovieDetail_5()) as _i7.MovieDetail);
  @override
  _i9.RequestState get recommendationState =>
      (super.noSuchMethod(Invocation.getter(#recommendationState),
          returnValue: _i9.RequestState.Empty) as _i9.RequestState);
  @override
  List<_i10.Film> get movieRecommendations =>
      (super.noSuchMethod(Invocation.getter(#movieRecommendations),
          returnValue: <_i10.Film>[]) as List<_i10.Film>);
  @override
  bool get isAddedTowatchlist =>
      (super.noSuchMethod(Invocation.getter(#isAddedTowatchlist),
          returnValue: false) as bool);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  String get watchlistMessage =>
      (super.noSuchMethod(Invocation.getter(#watchlistMessage), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i11.Future<void> fetchMovieDetail(int? id) => (super.noSuchMethod(
      Invocation.method(#fetchMovieDetail, [id]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i11.Future<void>);
  @override
  _i11.Future<void> tambahDaftarTonton(_i7.MovieDetail? film) =>
      (super.noSuchMethod(Invocation.method(#tambahDaftarTonton, [film]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i11.Future<void>);
  @override
  _i11.Future<void> removeFromwatchlist(_i7.MovieDetail? film) =>
      (super.noSuchMethod(Invocation.method(#removeFromwatchlist, [film]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i11.Future<void>);
  @override
  _i11.Future<void> loadwatchlistStatus(int? id) => (super.noSuchMethod(
      Invocation.method(#loadwatchlistStatus, [id]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i11.Future<void>);
  @override
  void addListener(_i12.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i12.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}

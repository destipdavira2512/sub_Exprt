// Mocks generated by Mockito 5.1.0 from annotations
// in cinta_film/test/presentation/provider/tvls/tvls_detail_notifier_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:cinta_film/common/failure.dart' as _i6;
import 'package:cinta_film/domain/entities/tvls/tvls.dart' as _i9;
import 'package:cinta_film/domain/entities/tvls/tvls_detail.dart' as _i7;
import 'package:cinta_film/domain/repositories/tvls_repository.dart' as _i2;
import 'package:cinta_film/domain/usecases/tvls/get_tvls_detail.dart' as _i4;
import 'package:cinta_film/domain/usecases/tvls/get_tvls_recomendations.dart'
    as _i8;
import 'package:cinta_film/domain/usecases/tvls/get_watchlist_status_tvls.dart'
    as _i10;
import 'package:cinta_film/domain/usecases/tvls/remove_watchlist_tvls.dart'
    as _i12;
import 'package:cinta_film/domain/usecases/tvls/save_watchlist_tvls.dart'
    as _i11;
import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeTvlsRepository_0 extends _i1.Fake implements _i2.TvlsRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [GetTvlsDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvlsDetail extends _i1.Mock implements _i4.GetTvlsDetail {
  MockGetTvlsDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvlsRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvlsRepository_0()) as _i2.TvlsRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.TvlsDetail>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<_i3.Either<_i6.Failure, _i7.TvlsDetail>>.value(
              _FakeEither_1<_i6.Failure, _i7.TvlsDetail>())) as _i5
          .Future<_i3.Either<_i6.Failure, _i7.TvlsDetail>>);
}

/// A class which mocks [GetTvlsRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvlsRecommendations extends _i1.Mock
    implements _i8.GetTvlsRecommendations {
  MockGetTvlsRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvlsRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvlsRepository_0()) as _i2.TvlsRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i9.Tvls>>> execute(dynamic id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<_i3.Either<_i6.Failure, List<_i9.Tvls>>>.value(
              _FakeEither_1<_i6.Failure, List<_i9.Tvls>>())) as _i5
          .Future<_i3.Either<_i6.Failure, List<_i9.Tvls>>>);
}

/// A class which mocks [ClassStatusDaftarTontonTvls].
///
/// See the documentation for Mockito's code generation for more information.
class MockClassStatusDaftarTontonTvls extends _i1.Mock
    implements _i10.ClassStatusDaftarTontonTvls {
  MockClassStatusDaftarTontonTvls() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvlsRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvlsRepository_0()) as _i2.TvlsRepository);
  @override
  _i5.Future<bool> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
}

/// A class which mocks [ClassSimpanDaftarTontonTvls].
///
/// See the documentation for Mockito's code generation for more information.
class MockClassSimpanDaftarTontonTvls extends _i1.Mock
    implements _i11.ClassSimpanDaftarTontonTvls {
  MockClassSimpanDaftarTontonTvls() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvlsRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvlsRepository_0()) as _i2.TvlsRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(_i7.TvlsDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#execute, [tv]),
              returnValue: Future<_i3.Either<_i6.Failure, String>>.value(
                  _FakeEither_1<_i6.Failure, String>()))
          as _i5.Future<_i3.Either<_i6.Failure, String>>);
}

/// A class which mocks [ClassHapusDaftarTontonTvls].
///
/// See the documentation for Mockito's code generation for more information.
class MockClassHapusDaftarTontonTvls extends _i1.Mock
    implements _i12.ClassHapusDaftarTontonTvls {
  MockClassHapusDaftarTontonTvls() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvlsRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvlsRepository_0()) as _i2.TvlsRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(_i7.TvlsDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#execute, [tv]),
              returnValue: Future<_i3.Either<_i6.Failure, String>>.value(
                  _FakeEither_1<_i6.Failure, String>()))
          as _i5.Future<_i3.Either<_i6.Failure, String>>);
}

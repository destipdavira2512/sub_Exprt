// Mocks generated by Mockito 5.1.0 from annotations
// in cinta_film/test/presentation/pages/tvls_detail_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i11;
import 'dart:ui' as _i12;

import 'package:cinta_film/common/state_enum.dart' as _i10;
import 'package:cinta_film/domain/entities/tvls/tvls.dart' as _i9;
import 'package:cinta_film/domain/entities/tvls/tvls_detail.dart' as _i7;
import 'package:cinta_film/domain/usecases/tvls/get_tvls_detail.dart' as _i2;
import 'package:cinta_film/domain/usecases/tvls/get_tvls_recomendations.dart'
    as _i6;
import 'package:cinta_film/domain/usecases/tvls/get_watchlist_status_tvls.dart'
    as _i5;
import 'package:cinta_film/domain/usecases/tvls/remove_watchlist_tvls.dart'
    as _i4;
import 'package:cinta_film/domain/usecases/tvls/save_watchlist_tvls.dart'
    as _i3;
import 'package:cinta_film/presentasi/provider/tvls/tvls_detail_notifier.dart'
    as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetTvlsDetail_0 extends _i1.Fake implements _i2.GetTvlsDetail {}

class _FakeClassSimpanDaftarTontonTvls_1 extends _i1.Fake
    implements _i3.ClassSimpanDaftarTontonTvls {}

class _FakeClassHapusDaftarTontonTvls_2 extends _i1.Fake
    implements _i4.ClassHapusDaftarTontonTvls {}

class _FakeClassStatusDaftarTontonTvls_3 extends _i1.Fake
    implements _i5.ClassStatusDaftarTontonTvls {}

class _FakeGetTvlsRecommendations_4 extends _i1.Fake
    implements _i6.GetTvlsRecommendations {}

class _FakeTvlsDetail_5 extends _i1.Fake implements _i7.TvlsDetail {}

/// A class which mocks [TvlsDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvlsDetailNotifier extends _i1.Mock
    implements _i8.TvlsDetailNotifier {
  MockTvlsDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetTvlsDetail get getTvlsDetail =>
      (super.noSuchMethod(Invocation.getter(#getTvlsDetail),
          returnValue: _FakeGetTvlsDetail_0()) as _i2.GetTvlsDetail);
  @override
  _i3.ClassSimpanDaftarTontonTvls get savewatchlistTvls =>
      (super.noSuchMethod(Invocation.getter(#savewatchlistTvls),
              returnValue: _FakeClassSimpanDaftarTontonTvls_1())
          as _i3.ClassSimpanDaftarTontonTvls);
  @override
  _i4.ClassHapusDaftarTontonTvls get removewatchlistTvls =>
      (super.noSuchMethod(Invocation.getter(#removewatchlistTvls),
              returnValue: _FakeClassHapusDaftarTontonTvls_2())
          as _i4.ClassHapusDaftarTontonTvls);
  @override
  _i5.ClassStatusDaftarTontonTvls get getwatchlistStatusTvls =>
      (super.noSuchMethod(Invocation.getter(#getwatchlistStatusTvls),
              returnValue: _FakeClassStatusDaftarTontonTvls_3())
          as _i5.ClassStatusDaftarTontonTvls);
  @override
  _i6.GetTvlsRecommendations get getTvlsRecommendations =>
      (super.noSuchMethod(Invocation.getter(#getTvlsRecommendations),
              returnValue: _FakeGetTvlsRecommendations_4())
          as _i6.GetTvlsRecommendations);
  @override
  _i7.TvlsDetail get tv => (super.noSuchMethod(Invocation.getter(#tv),
      returnValue: _FakeTvlsDetail_5()) as _i7.TvlsDetail);
  @override
  List<_i9.Tvls> get tvRecommendations =>
      (super.noSuchMethod(Invocation.getter(#tvRecommendations),
          returnValue: <_i9.Tvls>[]) as List<_i9.Tvls>);
  @override
  _i10.RequestState get recommendationTvState =>
      (super.noSuchMethod(Invocation.getter(#recommendationTvState),
          returnValue: _i10.RequestState.Empty) as _i10.RequestState);
  @override
  _i10.RequestState get tvState =>
      (super.noSuchMethod(Invocation.getter(#tvState),
          returnValue: _i10.RequestState.Empty) as _i10.RequestState);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get isAddedTowatchlistTv =>
      (super.noSuchMethod(Invocation.getter(#isAddedTowatchlistTv),
          returnValue: false) as bool);
  @override
  String get watchlistMessageTv => (super
          .noSuchMethod(Invocation.getter(#watchlistMessageTv), returnValue: '')
      as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i11.Future<void> fetchTvDetail(int? id) => (super.noSuchMethod(
      Invocation.method(#fetchTvDetail, [id]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i11.Future<void>);
  @override
  _i11.Future<void> addwatchlistTv(_i7.TvlsDetail? tv) => (super.noSuchMethod(
      Invocation.method(#addwatchlistTv, [tv]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i11.Future<void>);
  @override
  _i11.Future<void> removeFromwatchlistTv(_i7.TvlsDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#removeFromwatchlistTv, [tv]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i11.Future<void>);
  @override
  _i11.Future<void> loadwatchlistStatusTv(int? id) => (super.noSuchMethod(
      Invocation.method(#loadwatchlistStatusTv, [id]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i11.Future<void>);
  @override
  void addListener(_i12.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i12.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
